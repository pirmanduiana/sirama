/*
 * jQuery Calculation Plug-in
 *
 * Copyright (c) 2011 Dan G. Switzer, II
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: 13
 * Version: 0.4.09
 *
*/

var bIsFirebugReady = (!!window.console && !!window.console.log);						
$(document).ready(
  function (){
	  // update the plug-in version
	  $("#idPluginVersion").text($.Calculation.version);

	  // bind the recalc function to the quantity fields
	  $("input[name^=txt_coarate]").bind("keyup", recalc);
	  $("input[name^=txt_coadebet]").bind("keyup", recalc);
	  $("input[name^=txt_coacredit]").bind("keyup", recalc);
	  // run the calculation function now
	  recalc();

	  // automatically update the "#totalSum" field every time
	  // the values are changes via the keyup event
	  $("input[name^=sum]").sum("keyup", "#totalSum");

	  // automatically update the "#totalAvg" field every time
	  // the values are changes via the keyup event
	  $("input[name^=avg]").avg({
		  bind:"keyup"
		  , selector: "#totalAvg"
		  // if an invalid character is found, change the background color
		  , onParseError: function(){
			  this.css("backgroundColor", "#cc0000")
		  }
		  // if the error has been cleared, reset the bgcolor
		  , onParseClear: function (){
			  this.css("backgroundColor", "");
		  }
	  });

	  // automatically update the "#minNumber" field every time
	  // the values are changes via the keyup event
	  $("input[name^=min]").min("keyup", "#numberMin");

	  // automatically update the "#minNumber" field every time
	  // the values are changes via the keyup event
	  $("input[name^=max]").max("keyup", {
		  selector: "#numberMax"
		  , oncalc: function (value, options){
			  // you can use this to format the value
			  $(options.selector).val(value);
		  }
	  });

	  // this calculates the sum for some text nodes
	  $("#idTotalTextSum").click(
		  function (){
			  // get the sum of the elements
			  var sum = $(".textSum").sum();

			  // update the total
			  $("#totalTextSum").text("$" + sum.toString());
		  }
	  );

	  // this calculates the average for some text nodes
	  $("#idTotalTextAvg").click(
		  function (){
			  // get the average of the elements
			  var avg = $(".textAvg").avg();

			  // update the total
			  $("#totalTextAvg").text(avg.toString());
		  }
	  );
  }
);

function recalc(){
  $("[id^=total_item]").calc(
	  // the equation to use for the calculation
	  "(coarate * coadebet) - (coarate * coacredit)",
	  // define the variables used in the equation, these can be a jQuery object
	  {
		  coarate   : $("input[name^=txt_coarate]"),
		  coadebet  : $("input[name^=txt_coadebet]"),
		  coacredit : $("input[name^=txt_coacredit]")
	  },
	  // define the formatting callback, the results of the calculation are passed to this function
	  function (s){
		  // return the number as a dollar amount
		  return s.toFixed(2);
	  },
	  // define the finish callback, this runs after the calculation has been complete
	  function ($this){
		  // sum the total of the $("[id^=total_item]") selector
		  var sumdebet = $("input[name^=txt_coadebet]").sum();
		  var sumcredit = $("input[name^=txt_coacredit]").sum();
		  var sum = $this.sum();
		  $("#totalDebet").text(
			  // round the results to 2 digits
			  sumdebet.toFixed(2)
		  );
		  $("#totalCredit").text(
			  // round the results to 2 digits
			  sumcredit.toFixed(2)
		  );
	  }
  );
}